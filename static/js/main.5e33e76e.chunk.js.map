{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","style","textDecoration","className","src","alt","map","genre","index","key","slice","prototype","PropTypes","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e33e76e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/movie/${id}`,\r\n        state: {\r\n          year,\r\n          title,\r\n          summary,\r\n          poster,\r\n          genres,\r\n        },\r\n      }}\r\n      style={{ textDecoration: \"none\" }}\r\n    >\r\n      <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie_data\">\r\n          <h3 className=\"movie_title\">{title}</h3>\r\n          <h5 className=\"movie_year\">{year}</h5>\r\n          <ul className=\"movie_genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres_genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nMovie.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n// function component는 function이고 뭔가를 return함. 그리고 screen에 표시 됨.\r\n// class component는 class임. react component로부터 확장되고 screen에 표시 됨.\r\n// *** React는 자동적으로 class component의 render method를 실행함. 자동적으로!!!!\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    // axios.get은 항상 빠르지는 않음.\r\n    // javascript에게 componentDidMount함수가 끝날때까지 시간이 걸릴 수 있다고 말해야 됨. 그걸 기다려야 됨.\r\n    // async랑 await을 써줘서 이 함수가 비동기라고 말해준다.\r\n    // async : 기다려!\r\n    // await : 뭘 기다려? axios? ㅇㅋㅇㅋ axios가 끝날 때까지 기다렸다가 계속 할게\r\n    // this.setState({ movies: movies }); 아래처럼 단축해서 쓸 수 있음.\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    // Data Fatch 방법, 하지만 Axios라는 더 좋은 방법이 있다.\r\n    // fetch();\r\n    // 마치 fetch위의 작은 layer, 혹은 땅콩 주위의 멋진 초콜릿.\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Detail.css\";\r\nimport \"./Home.css\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  // render가 먼저 일어나니까 처리 안해주면 location 없다고 에러난당.\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        <div className=\"movie_detail\">\r\n          <img\r\n            src={location.state.poster}\r\n            alt={location.state.title}\r\n            title={location.state.title}\r\n          />\r\n          <div className=\"movie_detail_data\">\r\n            <h3 className=\"movie_detail_title\">{location.state.title}</h3>\r\n            <h5 className=\"movie_detail_year\">{location.state.year}</h5>\r\n            <ul className=\"movie_detail_genres\">\r\n              {location.state.genres.map((genre, index) => (\r\n                <li key={index} className=\"genres_genre\">\r\n                  {genre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"movie_detail_summary\">{location.state.summary}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport About from \"./routes/About\";\r\nimport Detail from \"./routes/Detail\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\n// Router는 HashRouter가 있고, BrowserRouter가 있는데\r\n// BrowswerRouter는 github blog에 업로드할때 좀 까다로워서\r\n// HashRouter이 다루기 좀 더 쉬움.\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      {/* Navigation에서 Link를 사용할거라면 꼭 이렇게 Router안에 들어있어야함. */}\r\n      <Navigation />\r\n      {/* Route안에는 매우 중요한 props가 하나 들어감.\r\n    렌더링할 스크린이 들어가고, 다른 prop은 뭘할지 정해줌. */}\r\n      {/* Route에 exact={true}를 넣으면, url path가 딱 /일때만 render된다. */}\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n    </HashRouter>\r\n    // 만약 footer가 있다면 이 위치에 <footer></footer>를 넣으면 됨.\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}